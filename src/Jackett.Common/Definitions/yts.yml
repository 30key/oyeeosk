---
id: yts-yml
name: YTS-Yml
description: "YTS is a Public torrent site specialising in HD movies of small size"
language: en-US
type: public
encoding: UTF-8
requestDelay: 2.5
links:
  - https://yts.mx/
  - https://yts.unblockit.kim/
  - https://yts.unblockninja.com/
  - https://yts.nocensor.work/
legacylinks:
  - https://yts.ag/
  - https://yts.am/
  - https://yts.lt/
  - https://yts.unblockit.dev/
  - https://yts.root.yt/
  - https://yts.unblockit.ltd/
  - https://yts.unblockit.buzz/
  - https://yts.unblockit.club/
  - https://yts.unblockit.link/
  - https://yts.unblockit.onl/
  - https://yts.unblockit.uno/
  - https://yts.unblockit.ch/
  - https://yts.unblockit.li/
  - https://yts.unblockit.ws/
  - https://yts.nocensor.space/


caps:
  categorymappings:
    - {id: 720p, cat: Movies/HD, desc: "Movies/x264/720p"}
    - {id: 1080p, cat: Movies/HD, desc: "Movies/x264/1080p"}
    - {id: 2160p, cat: Movies/UHD, desc: "Movies/x264/2160p"}
    - {id: 3D, cat: Movies/3D, desc: "Movies/x264/3D"}

  modes:
    search: [q]
    movie-search: [q]

search:
  paths:
    - path: api/v2/list_movies.json
      # Response block is necessary for parsing as JSON
      response:
        type: json
        # If the torrents are in separate category
        attribute: torrents
        # If there are multiple torrents per title
        multiple: true
  inputs:
    query_term: "{{ if .Query.IMDBID }}{{ .Query.IMDBID }}{{ else }}{{ re_replace .Keywords \"[']\" \"\" }}{{ end }}"
    limit: 50
    sort: date_added

  rows:
    # Shift to dot notation from arrow notation
    selector: data.movies
    # Explicitly provide number of rows
    count:
      selector: data.movie_count
      # Here filters apply just like a normal selector

  fields:
    # Here .. means extract from row and without that means from the torrent attribute if applicable
    quality:
      selector: quality
    category:
      selector: quality
    type:
      selector: type
    year:
      selector: ..year
    title:
      selector: ..title
      # filters are currently not actioned
      filters:
        - name: replace
          args: [":", ""]
        - name: replace
          args: [" ", "."]
        - name: append
          args: ".{{ .Result.year }}.{{ .Result.quality }}.{{ if eq .Result.type \"web\" }}WEBRip{{ else }}BRRip{{ end }}-YTS"
    details:
      selector: ..url
    download:
      selector: url
    infohash:
      selector: hash
    poster:
      selector: ..large_cover_image
    imdb:
      selector: ..imdb_code
    date:
      selector: date_uploaded_unix
    size:
      selector: size_bytes
    seeders:
      selector: seeds
    leechers:
      selector: peers
    downloadvolumefactor:
      text: 0
    uploadvolumefactor:
      text: 1
# json api v2
